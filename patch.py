import socket
host_list = ["39.105.46.33",
"119.93.86.252",
"163.10.69.68",
"121.196.48.231",
"119.3.152.110",
"220.128.91.58",
"60.248.158.252",
"216.98.8.7",
"116.202.76.123",
"138.201.82.150",
"101.201.103.30",
"59.34.17.26",
"190.88.53.98",
"61.128.235.99",
"163.10.69.118",
"146.59.14.119",
"218.28.50.79",
"193.29.62.83",
"58.60.3.222",
"171.107.60.194",
"221.180.247.81",
"46.163.166.155",
"84.248.128.27",
"39.100.36.182",
"91.250.118.240",
"163.10.69.99",
"116.203.149.22",
"199.88.158.138",
"119.23.65.137",
"79.134.235.20",
"15.237.27.215",
"181.49.106.206",
"163.10.69.106",
"221.226.251.10",
"116.203.145.105",
"183.62.230.242",
"209.209.8.243",
"114.217.150.135",
"120.77.223.81",
"212.75.105.231",
"60.190.199.218",
"212.210.215.22",
"113.87.83.242",
"114.34.86.188",
"117.48.157.33",
"113.105.87.235",
"139.224.30.250",
"94.230.166.198",
"163.10.69.116",
"113.98.242.74",
"163.10.69.16",
"163.10.69.84",
"119.188.169.248",
"120.77.159.214",
"163.10.69.81",
"116.203.122.151",
"163.10.69.109",
"163.10.69.78",
"213.133.31.132",
"193.110.160.166",
"123.127.150.238",
"95.217.213.235",
"106.116.116.249",
"163.10.69.51",
"116.31.88.58",
"114.80.247.141",
"118.69.228.250",
"121.31.58.213",
"118.25.175.35",
"59.36.24.222",
"220.164.125.224",
"58.221.128.74",
"221.2.207.230",
"95.217.214.53",
"163.10.69.74",
"148.251.233.164",
"185.186.252.111",
"163.10.69.108",
"176.9.59.155",
"139.224.208.244",
"116.63.176.93",
"60.175.4.18",
"136.255.179.2",
"123.59.105.165",
"213.211.128.237",
"15.237.27.209",
"219.144.235.163",
"44.209.4.11",
"15.237.27.221",
"177.135.237.57",
"121.40.232.245",
"163.10.69.89",
"118.126.104.57",
"141.95.162.3",
"116.236.192.130",
"177.70.21.215",
"163.10.69.119",
"163.10.69.124",
"27.102.203.215",
"61.142.177.126"]
for host in host_list:
    port = 5222


    payload = b"\x3c\x73\x74\x72\x65\x61\x6d\x3a\x73\x74\x72\x65\x61\x6d\x20\x74" +\
    b"\x6f\x3d\x27\x6a\x61\x62\x62\x65\x72\x2e\x6f\x72\x67\x27\x20\x78" +\
    b"\x6d\x6c\x6e\x73\x3a\x73\x74\x72\x65\x61\x6d\x3d\x27\x68\x74\x74" +\
    b"\x70\x3a\x2f\x2f\x65\x74\x68\x65\x72\x78\x2e\x6a\x61\x62\x62\x65" +\
    b"\x72\x2e\x6f\x72\x67\x2f\x73\x74\x72\x65\x61\x6d\x73\x27\x20\x78" +\
    b"\x6d\x6c\x6e\x73\x3d\x27\x6a\x61\x62\x62\x65\x72\x3a\x63\x6c\x69" +\
    b"\x65\x6e\x74\x27\x20\x78\x6d\x6c\x3a\x6c\x61\x6e\x67\x3d\x27\x65" +\
    b"\x6e\x27\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x27\x31\x2e\x30\x27\x3e"

    print(host)
    try:
        #create an AF_INET, STREAM socket (TCP)
        socket.setdefaulttimeout(5)
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        address = (host,port)
        s.connect(address)
        print("连接成功")
        s.sendall(payload)
        recv_data = s.recv(10240)
        print(recv_data[0:])
        a = b"\x3c\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d"

        if recv_data[0:14] == b"<?xml version=":
            print("ok")
    except Exception as err:
        print (err)

    # try:
    #     socket.setdefaulttimeout(5)
    #     client = socket.socket(type=socket.SOCK_DGRAM)
    #     send_data = payload
    #     client.sendto(send_data, (host, port))
    #     re_Data, _ = client.recvfrom(10240)

    #     client.close()

    #     print(re_Data)
    # except:
    #     print("socket failed")
    #     pass


